{"mappings":"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","sources":["src/js/serviceApi.js","src/js/markupGallery.js","src/index.js"],"sourcesContent":["export { NewServiceApi };\nconst key = 'bef2e1469ade062164db331fc6ab2f25';\nconst url = 'https://api.themoviedb.org/3';\nexport default class NewServiceApi {\n  constructor() {\n    this.searchValue = '';\n    this.page = 1;\n    this.id = NaN;\n  }\n\n  // сервіс  топ популярних фільмів за тиждень\n  async serviceMovieTopApi() {\n    try {\n      const resp = await fetch(\n        `${url}/trending/movie/week?api_key=${key}&media_type=all&time_window=week&page=${this.page}`\n      );\n      const respData = await resp.json();\n\n      return respData;\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  // сервіс пошук фільмів за значенням\n  async serviceSearchMovie() {\n    try {\n      const resp = await fetch(\n        `${url}/search/movie?api_key=${key}&query=\"${this.searchValue}`\n      );\n\n      const respData = await resp.json();\n\n      return respData;\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  // сервіс пошку фыльмыв по айді\n  async serviceIdMovie() {\n    try {\n      const resp = await fetch(`${url}/movie/${this.id},?api_key=${key}`);\n\n      const respData = await resp.json();\n\n      return respData;\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  // async serviceVideoApi() {\n  //   try {\n  //     const resp = await fetch(\n  //       `https://api.themoviedb.org/3/movie/${this.id}/videos?api_key=bef2e1469ade062164db331fc6ab2f25`\n  //     );\n  //     const respData = await resp.json();\n\n  //     return respData;\n  //   } catch (error) {\n  //     console.error(error.message);\n  //   }\n  // }\n  async ganresApi() {\n    try {\n      const resp = await fetch(\n        `https://api.themoviedb.org/3//genre/movie/list?api_key=bef2e1469ade062164db331fc6ab2f25`\n      );\n      const respGanre = await resp.json();\n      console.log(respGanre);\n      return respGanre;\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  ressetPage() {\n    this.page = 1;\n  }\n  incrementPage() {\n    return (this.page += 1);\n  }\n  decrementPage() {\n    if (this.page <= 1) {\n      return;\n    }\n    return (this.page -= 1);\n  }\n  get query() {\n    return this.searchValue;\n  }\n\n  set query(nuwQuery) {\n    this.searchValue = nuwQuery;\n  }\n  set pageNumber(nuwPage) {\n    this.page = nuwPage;\n  }\n\n  set idNumber(nuwId) {\n    this.id = nuwId;\n  }\n\n  insertGenresToMovieObj() {\n    return this.fetchPopularArticles().then(data => {\n      return this.fetchGenres().then(genresList => {\n        return data.map(movie => ({\n          ...movie,\n          release_date: movie.release_date.split('-')[0],\n          genres: movie.genre_ids\n            .map(id => genresList.filter(el => el.id === id))\n            .flat(),\n        }));\n      });\n    });\n  }\n}\n","import { NewServiceApi } from './serviceApi';\nconst serviceApi = new NewServiceApi();\n\nconst ganresInfo = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\n\nexport default function markupGallery(data) {\n  const gallery = document.querySelector('.gallery_list');\n\n  document.querySelector('.gallery_list').innerHTML = '';\n  data.forEach(el => {\n    //порівняння айді з масивом всіх жанрів\n    // ganresInfo.map(q => {\n    //   if (q.id === el.genre_ids[0]) {\n    //     el.genre_ids[0] = q.name;\n    //   }\n\n    //   if (q.id === el.genre_ids[1]) {\n    //     el.genre_ids[1] = q.name;\n    //   }\n    //   if (q.id === el.genre_ids[2]) {\n    //     el.genre_ids[2] = q.name;\n    //   }\n    //   if (q.id === el.genre_ids[3]) {\n    //     el.genre_ids[3] = q.name;\n    //   }\n    //   if (q.id === el.genre_ids[4]) {\n    //     el.genre_ids[4] = q.name;\n    //   }\n    // });\n\n    //лишає з дати тільки рік\n    const realeaseData = el.release_date.slice(0, 4);\n\n    const movieEl = document.createElement('li');\n    movieEl.classList.add('gallery_item');\n    // якщо картинка відсутня, то міняє її на це забраження\n    if (el.poster_path === null) {\n      movieEl.innerHTML = `<div class=\"modal_click-open\" id=\"${el.id}\">\n      <img class=\"gallery_img\" src=\"https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg?w=996&t=st=1662636904~exp=1662637504~hmac=6929048a20459487fdcf38b8077d000703b9a860b7d7ee1bb32f889a47b1edd8\" alt=\"${el.original_title}\"/></div>\n        <div class=\"title_container\"><h2 class=\"gallery_title\">${el.original_title}</h2>\n        <div><p class=\"ganre\">${el.genre_ids} ${realeaseData}</p></div>\n        </div>`;\n    } else {\n      movieEl.innerHTML = `<div class=\"modal_click-open\" id=\"${el.id}\">\n      <img class=\"gallery_img\" src=\"https://image.tmdb.org/t/p/w500${el.poster_path}\" alt=\"${el.original_title}\"/></div>\n        <div class=\"title_container\"><h2 class=\"gallery_title\">${el.original_title}</h2>\n        <div><p class=\"ganre\">${el.genre_ids} ${realeaseData}</p></div>\n        </div>`;\n    }\n\n    gallery.appendChild(movieEl);\n\n    movieEl.addEventListener('click', () => openModal(el.id, el.poster_path));\n  });\n}\n\nconst modal = document.querySelector('.backdrop');\n\nconst modalBox = document.querySelector('.modal_box');\n\nasync function openModal(id, poster) {\n  serviceApi.idNumber = id;\n  console.log(id);\n  const respData = await serviceApi.serviceIdMovie();\n  const respDataVideo = await serviceApi.serviceVideoApi();\n  console.log(respDataVideo.results);\n\n  let ganres = respData.genres.map(el => el.name);\n  // 616037 629176 507086 682507 539681 852448\n  if (poster === null) {\n    modalBox.innerHTML = `\n    <div class=\"img_box\">\n    <img src=\"https://img.freepik.com/free-vector/glitch-error-404-page_23-2148105404.jpg?w=996&t=st=1662636904~exp=1662637504~hmac=6929048a20459487fdcf38b8077d000703b9a860b7d7ee1bb32f889a47b1edd8\" alt=\"\" class=\"modal_img\" />\n    </div>\n    <div class=\"text-content_box\">\n      <h2 class=\"modal_title\">${respData.original_title}</h2>\n      <div class=\"category_box\">\n        <ul class=\"category_list\">\n          <li class=\"category_item\">Vote / Votes <p> <span class=\"vote\">${\n            respData.vote_average\n          }</span><span class=\"slash\">/</span>${respData.vote_count}</p></li>\n          <li class=\"category_item\">Popularity <p>${respData.popularity}<p></li>\n          <li class=\"category_item\">Original Title</li>\n          <li class=\"category_item\">Genre</li>\n        </ul>\n        <ul class=\"categiryApi_list\">\n\n          <li class=\"categiryApi_item\"></li>\n          <li class=\"categiryApi_item categiryApi_style--upercase\">${\n            respData.original_title\n          }</li>\n          <li class=\"categiryApi_item categiryApi_style ganre\">${String(\n            ganres\n          ).replaceAll(',', ' / ')} </li>\n        </ul>\n      </div>\n      <h2 class=\"about_title\">About</h2>\n      <p class=\"about_text\">\n     ${respData.overview}\n      </p>\n      <div class=\"modal-box_btn\">\n        <button class=\"watched_btn\">add to Watched</button>\n        <button class=\"queue_btn\">add to queue</button>\n      </div>\n    </div>\n  `;\n  } else {\n    modalBox.innerHTML = `\n    <div class=\"img_box\">\n    <img src=\"https://image.tmdb.org/t/p/w500${poster}\" alt=\"\" class=\"modal_img\" />\n    </div>\n    <div class=\"text-content_box\">\n      <h2 class=\"modal_title\">${respData.original_title}</h2>\n      <div class=\"category_box\">\n        <ul class=\"category_list\">\n          <li class=\"category_item\">Vote / Votes <p> <span class=\"vote\">${\n            respData.vote_average\n          }</span><span class=\"slash\">/</span>${respData.vote_count}</p></li>\n          <li class=\"category_item\">Popularity <p>${respData.popularity}<p></li>\n          <li class=\"category_item\">Original Title</li>\n          <li class=\"category_item\">Genre</li>\n        </ul>\n        <ul class=\"categiryApi_list\">\n\n          <li class=\"categiryApi_item\"></li>\n          <li class=\"categiryApi_item categiryApi_style--upercase\">${\n            respData.original_title\n          }</li>\n          <li class=\"categiryApi_item categiryApi_style ganre\">${String(\n            ganres\n          ).replaceAll(',', ' / ')} </li>\n        </ul>\n      </div>\n      <h2 class=\"about_title\">About</h2>\n      <p class=\"about_text\">\n     ${respData.overview}\n      </p>\n      <div class=\"modal-box_btn\">\n        <button class=\"watched_btn\">add to Watched</button>\n        <button class=\"queue_btn\">add to queue</button>\n      </div>\n    </div>\n  `;\n  }\n\n  document.querySelector(\n    '.backdrop'\n  ).style.backgroundImage = `url(https://image.tmdb.org/t/p/original${respData.backdrop_path})`;\n\n  modal.classList.remove('is-hiden');\n  document.body.classList.add('scrollOFF');\n  const ganre = document.querySelector('.ganre');\n  const btnModalClose = document.querySelector('.btn_close');\n  btnModalClose.addEventListener('click', closeModal);\n}\n\nfunction closeModal() {\n  modal.classList.add('is-hiden');\n  document.body.classList.remove('scrollOFF');\n}\n\nwindow.addEventListener('click', e => {\n  if (e.target === modal) {\n    closeModal();\n  }\n});\n\nwindow.addEventListener('keydown', e => {\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n});\n\nexport { markupGallery, openModal };\n","import { NewServiceApi } from './js/serviceApi';\nimport { markupGallery, openModal, createModal } from './js/markupGallery';\nconst searchForm = document.querySelector('.search_form');\nconst gallery = document.querySelector('.gallery_list');\nconst paginationClick = document.querySelector('.pagination');\n\nconst serviceApi = new NewServiceApi();\nconst pageList = document.querySelector('.page_list');\nconst resultInput = document.querySelector('.result_input');\n\nasync function onSearch(e) {\n  e.preventDefault();\n\n  try {\n    const search = e.target.elements.search.value;\n\n    if (search === '') {\n      return;\n    }\n\n    serviceApi.query = search;\n\n    const data = await serviceApi.serviceSearchMovie();\n    console.log(data);\n    if (data.results.length === 0) {\n      resultInput.textContent =\n        'Search result not successful. Enter the correct movie name and';\n    }\n    markupGallery(data.results);\n  } catch (error) {}\n}\n\n// top movie\nasync function topMoviePage() {\n  const data = await serviceApi.serviceMovieTopApi();\n  markupGallery(data.results);\n}\ntopMoviePage();\n\nasync function idMovie() {\n  const s = await serviceApi.serviceIdMovie();\n\n  openModal(s);\n}\nidMovie();\nsearchForm.addEventListener('submit', onSearch);\n\n// modal\n"],"names":["$284754a050692e06$export$bf84b2c7ba08ba70","async","resp","fetch","this","page","json","error","console","message","searchValue","id","respGanre","log","ressetPage","incrementPage","decrementPage","query","nuwQuery","pageNumber","nuwPage","idNumber","nuwId","insertGenresToMovieObj","fetchPopularArticles","then","data","fetchGenres","genresList","map","movie","release_date","split","genres","genre_ids","filter","el","flat","constructor","NaN","$34bb0506b0f6f988$var$serviceApi","$34bb0506b0f6f988$export$2e2bcd8739ae039","gallery","document","querySelector","innerHTML","forEach","realeaseData","slice","movieEl","createElement","classList","add","poster_path","original_title","appendChild","addEventListener","$34bb0506b0f6f988$export$a7f6cffb6b8ba11c","$34bb0506b0f6f988$var$modal","$34bb0506b0f6f988$var$modalBox","poster","respData","serviceIdMovie","respDataVideo","serviceVideoApi","results","ganres","name","vote_average","vote_count","popularity","String","replaceAll","overview","style","backgroundImage","backdrop_path","remove","body","$34bb0506b0f6f988$var$closeModal","window","e","target","code","$1f0dc3b9307be026$var$searchForm","$1f0dc3b9307be026$var$serviceApi","$1f0dc3b9307be026$var$resultInput","serviceMovieTopApi","$1f0dc3b9307be026$var$topMoviePage","$1f0dc3b9307be026$var$idMovie","preventDefault","search","elements","value","serviceSearchMovie","length","textContent"],"version":3,"file":"index.ec3d8906.js.map"}